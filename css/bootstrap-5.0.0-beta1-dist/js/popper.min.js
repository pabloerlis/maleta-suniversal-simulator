/ *
 Copyright (C) Federico Zivolo 2018
 Distribuído sob a Licença MIT (os termos da licença estão em http://opensource.org/licenses/MIT).
 * / (function (e, t) {'object' == typeof export && 'undefined'! = typeof module? module.exports = t (): 'function' == typeof define && define.amd? define (t): e. Popper = t ()}) (this, function () {'use strict'; função e (e) {return e && '[object Function]' === {}. ToString.call (e)} function t (e) , t) {if (1! == e.nodeType) return []; var o = getComputedStyle (e, null); return t? o [t]: o} function o (e) {return'HTML '== = e.nodeName? e: e.parentNode || e.host} função n (e) {if (! e) return document.body; switch (e.nodeName) {case'HTML ': case'BODY': return e.ownerDocument.body; case '# document': return e.body;} var i = t (e), r = i.overflow, p = i.overflowX, s = i.overflowY; return / (auto | scroll | sobreposição) /. test (r + s + p)? e: n (o (e))} função r (e) {return 11 === e? re: 10 === e? pe: re || pe} função p (e) {if (! e) return document.documentElement;for (var o = r (10)? document.body: null, n = e.offsetParent; n === o && e.nextElementSibling;) n = (e = e.nextElementSibling) .offsetParent; var i = n && n.nodeName; return i && 'BODY'! == i && 'HTML'! == i? -1! == ['TD', 'TABLE']. indexOf (n.nodeName) && 'static' === t (n, ' position ')? p (n): n: e? e.ownerDocument.documentElement: document.documentElement} function s (e) {var t = e.nodeName; return'BODY'! == t && ('HTML' == = t || p (e.firstElementChild) === e)} função d (e) {return null === e.parentNode? e: d (e.parentNode)} função a (e, t) {if ( ! e ||! e.nodeType ||! t ||! t.nodeType) return document.documentElement; var o = e.compareDocumentPosition (t) & Node.DOCUMENT_POSITION_FOLLOWING, n = o? e: t, i = o? t : e, r = document.createRange (); r.setStart (n, 0), r.setEnd (i, 0); var l = r.commonAncestorContainer; if (e! == l && t! == l || n .contém (i)) return s (l)? l: p (l); var f = d (e); return f.host?a(f.host,t):a(e,d(t).host )} função l (e) {var t = 1 <argumentos.length && void 0! == argumentos [1]? argumentos [1]: 'top', o = 'top' === t? 'scrollTop': 'scrollLeft ', n = e.nodeName; if (' BODY '=== n ||' HTML '=== n) {var i = e.ownerDocument.documentElement, r = e.ownerDocument.scrollingElement || i; return r [o]} retornar e [o]} função f (e, t) {var o = 2 <argumentos.mprimento && void 0! == argumentos [2] && argumentos [2], n = l (t, 'topo'), i = l (t, 'esquerda'), r = o? -1: 1; retornar e.top + = n * r, e.bottom + = n * r, e.esquerdo + = i * r, e.direito + = i * r, e} função m (e, t) {var o = 'x' === t? 'Left': 'Top', n = 'Left' == o? 'Right': 'Bottom'; return parseFloat (e ['borda' + o + 'Largura'], 10) + parseFloat (e ['borda' + n + 'Largura'], 10)} função h (e, t, o,n) {return $ (t ['deslocamento' + e], t ['rolar' + e], o ['cliente' + e], o ['deslocamento' + e], o ['rolar' + e] , r (10)? o ['deslocamento' + e] + n ['margem' + ('Altura' === e? 'Topo': 'Esquerda')] + n ['margem' + ('Altura' === e? 'Bottom': 'Right')]: 0)} function c () {var e = document.body, t = document.documentElement, o = r (10) && getComputedStyle (t); return {height : h ('Height', e, t, o), width: h ('Width', e, t, o)}} function g (e) {return le ({}, e, {right: e.left + e.width, bottom: e.top + e.height})} função u (e) {var o = {}; tente {if (r (10)) {o = e.getBoundingClientRect (); var n = l (e, 'superior'), i = l (e, 'esquerda'); o.top + = n, o.esquerdo + = i, o.bottom + = n, o.direito + = i} senão o = e.getBoundingClientRect ()} catch (t) {} var p = {left: o.left, top: o.top, width: o.right-o.left, height: o.bottom-o.top}, s = 'HTML '=== e.nodeNome? c (): {}, d = s.largura || e.clientWidth || p.right-p.left, a = s.height || e.clientHeight || p.bottom-p.top, f = e.offsetWidth-d, h = e.offsetHeight- a; if (f || h) {var u = t (e); f- = m (u, 'x'), h- = m (u, 'y'), p.width- = f, p .height- = h} return g (p)} função b (e, o) {var i = 2 <argumentos.mprimento && void 0! == argumentos [2] && argumentos [2], p = r (10), s = 'HTML' === o.nodeNome, d = u (e), a = u (o), l = n (e), m = t (o), h = parseFloat (m.borderTopWidth, 10), c = parseFloat (m.borderLeftWidth, 10); i && 'HTML' === o.nodeName && (a.top = $ (a.top, 0), a.left = $ (a.left, 0)); var b = g ({top: d.top-a.top-h, left: d.left-a.left-c, largura: d.width, height: d.height}); if (b.marginTop = 0, b.marginLeft = 0,! p && s) {var y = parseFloat (m.marginTop, 10), w = parseFloat (m.marginLeft, 10); b.top- = hy, b.bottom- = hy, b.left - = cw, b.right- = cw, b.marginTop = y, b.marginLeft = w} return (p &&! i? o.contains (l): o === l && 'BODY '! == l.nodeNome) && (b = f (b, o)), b} função y (e) {var t = 1 <argumentos.mprimento && void 0! == argumentos [1] && argumentos [1], o = e.ownerDocument.documentElement, n = b (e, o), i = $ (o.clientWidth, window.innerWidth || 0), r = $ (o.clientHeight, window.innerHeight || 0), p = t? 0: l (o), s = t? 0: l (o, 'esquerda'), d = {topo: pn.top + n.marginTop, esquerda: sn.esquerda + n.marginLeft, largura: i, height: r}; return g (d)} função w (e) {var n = e.nodeName; return'BODY '=== n ||' HTML '=== n?! 1:' fixed ' === t (e, 'posição') || w (o (e))} função E (e) {if (! e ||! e.parentElement || r ()) retornar document.documentElement; for ( var o = e.parentElement; o && 'nenhum' === t (o, 'transformar');) o = o.parentElement; retornar o || document.documentElement} função v (e, t, i, r) { var p = 4 <argumentos.length && void 0! == argumentos [4] && argumentos [4], s = {topo: 0, esquerda: 0}, d = p? E (e): a (e, t);if ('viewport' === r) s = y (d, p); else {var l; 'scrollParent' === r? (l = n (o (t)), 'BODY' === l .nodeName && (l = e.ownerDocument.documentElement)): 'window' === r? l = e.ownerDocument.documentElement: l = r; var f = b (l, d, p); if ('HTML' === l.Nome do nó &&! w (d)) {var m = c (), h = m.altura, g = m.width; s.top + = f.top-f.marginTop, s.bottom = h + f.top, s.left + = f.left-f.marginLeft, s.right = g + f.left} else s = f} return s.left + = i, s.top + = i, s.right- = i , s.bottom- = i, s} função x (e) {var t = e.width, o = e.height; return t * o} função O (e, t, o, n, i) {var r = 5 <argumentos.length && void 0! == argumentos [5]? Argumentos [5]: 0; if (-1 === e.indexOf ('auto')) return e; var p = v (o, n, r, i), s = {top: {width: p.width, height: t.top-p.top}, right: {width: p.right-t.right, height: p.height}, inferior: {width: p.width, height: p.bottom-t.bottom}, esquerda: {width: t.left-p.left, height: p.height}}, d = Object.keys (s).map (função (e) {return le ({key: e}, s [e], {area: x (s [e])})}). sort (function (e, t) {return t.area- e.area}), a = d.filter (function (e) {var t = e.width, n = e.height; return t> = o.clientWidth && n> = o.clientHeight}), l = 0 <a .length? a [0] .key: d [0] .key, f = e.split ('-') [1]; return l + (f? '-' + f: '')} função L (e , t, o) {var n = 3 <argumentos.length && void 0! == argumentos [3]? argumentos [3]: nulo, i = n? E (t): a (t, o); retornar b (o , i, n)} função S (e) {var t = getComputedStyle (e), o = parseFloat (t.marginTop) + parseFloat (t.marginBottom), n = parseFloat (t.marginLeft) + parseFloat (t.marginRight ), i = {largura: e.offsetWidth + n, altura: e.offsetHeight + o}; retornar i} função T (e) {var t = {esquerda: 'direita', direita: 'esquerda', inferior: ' top ', top:' bottom '}; return e.replace (/ left | right | bottom | top / g, function (e) {return t [e]})} função C (e, t, o) {o = o.split ('-') [0];var n = S (e), i = {largura: n.largura, altura: n.altura}, r = -1! == ['direita', 'esquerda']. indexOf (o), p = r? 'top': 'left', s = r? 'left': 'top', d = r? 'height': 'width', a = r? 'width': 'height'; return i [p] = t [p] + t [d] / 2-n [d] / 2, i [s] = o === s? t [s] -n [a]: t [T (s)], i} função D (e, t) {return Array.prototype.find? e.find (t): e.filter (t) [0]} função N (e, t, o) {if (Array.prototype.findIndex) return e.findIndex (function (e) {return e [t] === o}); var n = D (e, function (e) {return e [t] === o}); return e.indexOf (n)} função P (t, o, n) {var i = void 0 === n? t: t.slice (0, N (t, 'nome', n)); return i.forEach (função (t) {t ['função'] && console.warn ('`modificador.função` está obsoleto, use` modificador.fn`!'); var n = t ['função'] || t.fn; t. habilitado && e (n) && (o.offsets.popper = g (o.offsets.popper), o.offsets.reference = g (o.offsets.reference), o = n (o, t))}), o} function k () {if (! this.state.isDestroyed) {var e = {instance: this, styles: {}, arrowStyles: { }, atributos: {}, invertidos:! 1, deslocamentos: {}}; e.offsets.reference = L (this.state, this.popper, this.reference, this.options.positionFixed), e.placement = O (this.options.placement, e.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), e.originalPlacement = e.placement, e.positionFixed = this.options.positionFixed, e.offsets.popper = C (this.popper, e.offsets.reference, e.placement), e.offsets.popper.position = this.options.positionFixed? 'fixo' : 'absoluto', e = P (this.modifiers, e), this.state.isCreated? this.options.onUpdate (e) :( this.state.isCreated =! 0, this.options.onCreate (e)) }} função W (e, t) {return e.some (function (e) {var o = e.name, n = e.enabled; return n &&o === t})} função B (e) {for (var t = [! 1, 'ms', 'Webkit', 'Moz', 'O'], o = e.charAt (0) .toUpperCase () + e.slice (1), n ​​= 0; n <t.length; n ++) {var i = t [n], r = i? '' + i + o: e; if ('indefinido'! = typeof document.body.style [r]) return r} return null} function H () {return this.state.isDestroyed =! 0, W (this.modifiers, 'applyStyle') && (this.popper.removeAttribute ( 'x-placement'), this.popper.style.position = '', this.popper.style.top = '', this.popper.style.left = '', this.popper.style.right = '' , this.popper.style.bottom = '', this.popper.style.willChange = '', this.popper.style [B ('transformar')] = ''), this.disableEventListeners (), this.options .removeOnDestroy && this.popper.parentNode.removeChild (this.popper), esta} função A (e) {var t = e.ownerDocument; return t? t.defaultView:janela} função M (e, t, o, i) {var r = 'BODY' === e.nodeName, p = r? e.ownerDocument.defaultView: e; p.addEventListener (t, o, {passive: ! 0}), r || M (n (p.parentNode), t, o, i), i.push (p)} função I (e, t, o, i) {o.updateBound = i, A (e) .addEventListener ('redimensionar', o.updateBound, {passivo:! 0}); var r = n (e); retornar M (r, 'rolar', o.updateBound, o.scrollParents), o. scrollElement = r, o.eventsEnabled =! 0, o} função F () {this.state.eventsEnabled || (this.state = I (this.reference, this.options, this.state, this.scheduleUpdate))} função R (e, t) {return A (e) .removeEventListener ('resize', t.updateBound), t.scrollParents.forEach (function (e) {e.removeEventListener ('scroll', t.updateBound)}) , t.updateBound = null, t.scrollParents = [], t.scrollElement = null, t.eventsEnabled =! 1, t} função U () {this.state.eventsEnabled && (cancelAnimationFrame (this.scheduleUpdate), this.state = R (este.referência, this.state))} função Y (e) {return ''! == e &&! isNaN (parseFloat (e)) && isFinite (e)} função j (e, t) {Object.keys (t) .forEach (função (o) {var n = ''; - 1! == ['largura', 'altura', 'superior', 'direita', 'inferior', 'esquerda']. indexOf (o) && Y (t [o]) && (n = 'px'), e.style [o] = t [o] + n})} função K (e, t) {Object.keys (t) .forEach (function (o) {var n = t [o] ;! 1 === n? e.removeAttribute (o): e.setAttribute (o, t [o])})} função q (e, t, o) {var n = D (e, função (e) {var o = e.name; return o === t}), i = !! n && e.some (função (e) {return e.name === o && e.enabled && e.order <n.order}); if (! i) {var r = '`' + t + '`'; console.warn ('`' + o + '`' + 'modificador é exigido pelo modificador' + r + 'no pedido para funcionar, certifique-se de incluí-lo antes de '+ r +'! ')} return i} função G (e) {return'end '=== e?' start ':' start '=== e?' end ': e} função z (e) {var t = 1 <argumentos .length && void 0! == argumentos [1] && argumentos [1], o = me.indexOf (e), n = me.slice (o + 1) .concat (me.slice (0, o)); return t? n.reverse (): n} função V (e, t, o, n) {var i = e.match (/ ((?: \ - | \ +)? \ d * \.? \ d *) ( . *) /), r = + i [1], p = i [2]; if (! r) retorna e; if (0 === p.indexOf ('%')) {var s; switch ( p) {case '% p': s = o; break; case '%': case '% r': default: s = n;} var d = g (s); return d [t] / 100 * r } if ('vh' === p || 'vw' === p) {var a; return a = 'vh' === p? $ (document.documentElement.clientHeight, window.innerHeight || 0) : $ (document.documentElement.clientWidth, window.innerWidth || 0), a / 100 * r} return r} função _ (e, t, o, n) {var i = [0,0], r = - 1! == ['direita', 'esquerda']. IndexOf (n), p = e.split (/ (\ + | \ -) ​​/). Map (função (e) {retornar e.trim ()}), s = p.indexOf (D (p, function (e) {return-1! == e.search (/, | \ s /)})); p [s] && - 1 = == p [s] .indexOf (',') && console.warn ('Os deslocamentos separados por espaços em branco estão obsoletos, use uma vírgula (,).'); var d = / \ s *, \ s * | \ s + /, a = -1 === s? [p]: [p.slice (0, s) .concat ([p [s] .split (d) [0]]), [p [ s] .split (d) [1]]. concat (p.slice (s + 1))]; retornar a = a.map (função (e, n) {var i = (1 === n ?! r: r)? 'height': 'width', p =! 1; return e.reduce (function (e, t) {return '' === e [e.length-1] && - 1! == ['+', '-']. indexOf (t)? (e [e.length-1] = t, p =! 0, e): p? (e [e.length-1] + = t, p =! 1, e): e.concat (t)}, []). map (function (e) {return V (e, i, t, o)})}), a.forEach (function (e , t) {e.para cada (função (o, n) {Y (o) && (i [t] + = o * ('-' === e [n-1]? - 1: 1))} )}), i} função X (e, t) {var o, n = t.offset, i = e.placement, r = e.offsets, p = r.popper, s = r.reference, d = i .Dividido('-') [0]; retornar o = Y (+ n)? [+ N, 0]: _ (n, p, s, d), 'esquerdo' === d? (P.top + = o [0], p.esquerdo- = o [1]): 'direito' === d? (p.top + = o [0], p.esquerdo + = o [1]): 'superior' === d? (p. esquerda + = o [0], p.top- = o [1]): 'inferior' === d && (p.esquerdo + = o [0], p.top + = o [1]), e.popper = p , e} para (var J = Math.min, Q = Math.round, Z = Math.floor, $ = Math.max, ee = 'undefined'! = typeof window && 'undefined'! = typeof document, te = [ 'Edge', 'Trident', 'Firefox'], oe = 0, ne = 0; ne <te.length; ne + = 1) if (ee && 0 <= navigator.userAgent.indexOf (te [ne])) {oe = 1; quebrar} var i = ee && window.Promise, ie = i? Function (e) {var t =! 1; return function () {t || (t =! 0, window.Promise.resolve (). Então (função () {t =! 1, e ()}))}}: função (e) {var t =! 1; função de retorno () {t || (t =! 0, setTimeout (função () { t =! 1, e ()}, oe))}}, re = ee && !! (window.MSInputMethodContext && document.documentMode), pe = ee && / MSIE 10 / .test (navigator.userAgent), se = function (e, t) {if (! (E instanceof t)) throw new TypeError ('Não é possível chamar uma classe como função')}, de = função () {function e (e, t) {for (var o, n = 0; n <t.length; n ++) o = t [n], o.enumerable = o.enumerable ||! 1, o.configurable =! 0, 'valor'in o && (o.writable =! 0), Object.defineProperty (e, o.key, o)} função de retorno (t, o, n) {return o && e (t.prototype, o) , n && e (t, n), t}} (), ae = function (e, t, o) {return t in e? Object.defineProperty (e, t, {value: o, enumerable:! 0, configurable: ! 0, gravável:! 0}): e [t] = o, e}, le = Objeto.atribuir || função (e) {para (var t, o = 1; o <argumentos.comprimento; o ++) para (var n em t = argumentos [o], t) Object.prototype.hasOwnProperty.call (t, n) && (e [n] = t [n]); retornar e}, fe = ['início automático' , 'automático', 'fim automático', 'início superior', 'início', 'extremidade superior', 'início à direita', 'direita ',' extremidade direita ',' extremidade inferior ',' inferior ',' início inferior ',' extremidade esquerda ',' esquerda ',' início à esquerda '], me = fe.slice (3) , he = {FLIP: 'flip', HORÁRIO: 'sentido horário', ANTI-HORÁRIO: 'anti-horário'}, ce = function () {function t (o, n) {var i = this, r = 2 <arguments.length && void 0 ! == argumentos [2]? argumentos [2]: {}; se (this, t), this.scheduleUpdate = function () {return requestAnimationFrame (i.update)}, this.update = ie (this.update. bind (this)), this.options = le ({}, t.Defaults, r), this.state = {isDestroyed:! 1, isCreated:! 1, scrollParents: []}, this.reference = o && o.jquery ? o [0]: o, this.popper = n && n.jquery? n [0]: n, this.options.modifiers = {}, Object.keys (le ({}, t.Defaults.modifiers, r.modifiers )). forEach (function (e) {i.options.modifiers [e] = le ({}, t.Defaults.modifiers [e] || {}, r.modifiers? r.modifiers [e]: {} )}),this.modifiers = Object.keys (this.options.modifiers) .map (function (e) {return le ({name: e}, i.options.modifiers [e])}). sort (function (e, t ) {return e.order-t.order}), this.modifiers.forEach (function (t) {t.enabled && e (t.onLoad) && t.onLoad (i.reference, i.popper, i.options, t, i.state)}), this.update (); var p = this.options.eventsEnabled; p && this.enableEventListeners (), this.state.eventsEnabled = p} return de (t, [{key: 'update', value : function () {return k.call (this)}}, {key: 'destroy', value: function () {return H.call (this)}}, {key: 'enableEventListeners', value: function () {return F.call (this)}}, {key: 'disableEventListeners', value: function () {return U.call (this)}}]), t} (); return ce.Utils = ('undefined' == typeof window? global: window) .PopperUtils, ce.placements = fe, ce.Defaults = {placement: 'bottom', positionFixed:! 1, eventsEnabled :!0, removeOnDestroy:! 1, onCreate: function () {}, onUpdate: function () {}, modificadores: {shift: {order: 100, enabled:! 0, fn: function (e) {var t = e. colocação, o = t.split ('-') [0], n = t.split ('-') [1]; if (n) {var i = e.offsets, r = i.reference, p = i.popper, s = -1! == ['inferior', 'superior']. indexOf (o), d = s? 'esquerda': 'superior', a = s? 'largura': 'altura', l = {início: ae ({}, d, r [d]), fim: ae ({}, d, r [d] + r [a] -p [a])}; e.offsets.popper = le ({}, p, l [n])} return e}}, deslocamento: {pedido: 200, ativado:! 0, fn: X, deslocamento: 0}, preventOverflow: {pedido: 300, ativado:! 0 , fn: function (e, t) {var o = t.boundariesElement || p (e.instance.popper); e.instance.reference === o && (o = p (o)); var n = B ( 'transformar'), i = e.instance.popper.style, r = i.top, s = i.left, d = i [n]; i.top = '', i.left = '', i [ n] = ''; var a = v (e.instance.popper, e.instance.reference, t.padding, o, e.positionFixed); i.top = r, i.left = s, i [n] = d, t.boundaries = a; var l = t.priority, f = e.offsets.popper, m = {principal: função (e) {var o = f [e]; return f [e] <a [e] &&! t.escapeWithReference && (o = $ (f [e], a [e])), ae ({}, e, o)}, secundário: função (e) { var o = 'right' === e? 'left': 'top', n = f [o]; return f [e]> a [e] &&! t.escapeWithReference && (n = J (f [o] , a [e] - ('direito' === e? f.width: f.height))), ae ({}, o, n)}}; return l.forEach (function (e) {var t = -1 === ['esquerdo', 'superior']. IndexOf (e)? 'Secundário': 'primário'; f = le ({}, f, m [t] (e))}), e .offsets.popper = f, e}, priority: ['left', 'right', 'top', 'bottom'], padding: 5, boundariesElement: 'scrollParent'}, keepTogether: {order: 400, enabled: ! 0, fn: function (e) {var t = e.offsets, o = t.popper, n = t.reference, i = e.placement.split ('-') [0], r = Z, p = -1! == ['superior', 'inferior'] .indexOf (i), s = p? 'right': 'bottom', d = p? 'left': 'top', a = p? 'width': 'height'; return o [s] <r (n [d]) && (e.offsets.popper [d] = r (n [d]) - o [a]), o [d]> r (n [s]) && (e.offsets.popper [d] = r (n [s])), e}}, seta: {ordem: 500, habilitado:! 0, fn: função (e, o) {var n; if (! q (e.instância. modificadores, 'arrow', 'keepTogether')) return e; var i = o.element; if ('string' == typeof i) {if (i = e.instance.popper.querySelector (i) ,! i) return e;} else if (! e.instance.popper.contains (i)) return console.warn ('AVISO: `arrow.element` deve ser filho de seu elemento popper!'), e; var r = e. placement.split ('-') [0], p = e.offsets, s = p.popper, d = p.reference, a = -1! == ['left', 'right']. indexOf (r ), l = a? 'altura': 'largura', f = a? 'Superior': 'Esquerda', m = f.toLowerCase (), h = a? 'esquerda': 'superior',c = a? 'inferior': 'direita', u = S (i) [l]; d [c] -u <s [m] && (e.offsets.popper [m] - = s [m] - (d [c] -u)), d [m] + u> s [c] && (e.offsets.popper [m] + = d [m] + us [c]), e.offsets.popper = g (e.offsets.popper); var b = d [m] + d [l] / 2-u / 2, y = t (e.instance.popper), w = parseFloat (y ['margem' + f ], 10), E = parseFloat (y ['borda' + f + 'Largura'], 10), v = be.offsets.popper [m] -wE; return v = $ (J (s [l] -u , v), 0), e.arrowElement = i, e.offsets.arrow = (n = {}, ae (n, m, Q (v)), ae (n, h, ''), n), e}, elemento: '[x-seta]'}, inverter: {ordem: 600, habilitado:! 0, fn: função (e, t) {if (W (e.instância.modificadores, 'interno')) return e; if (e.flipped && e.placement === e.originalPlacement) return e; var o = v (e.instance.popper, e.instance.reference, t.padding, t.boundariesElement, e.positionFixed), n = e.placement.split ('-') [0], i = T (n), r = e.placement.split ('-') [1] || '', p = [];switch (t.behavior) {case he.FLIP: p = [n, i]; break; case he.CLOCKWISE: p = z (n); break; case he.COUNTERCLOCKWISE: p = z (n,! 0) ; break; default: p = t.behavior;} return p.forEach (function (s, d) {if (n! == s || p.length === d + 1) return e; n = e. placement.split ('-') [0], i = T (n); var a = e.offsets.popper, l = e.offsets.reference, f = Z, m = 'left' === n && f ( a.right)> f (l.left) || 'right' === n && f (a.left) <f (l.right) || 'top' === n && f (a.bottom)> f (l .top) || 'inferior' === n && f (a.top) <f (l.bottom), h = f (a.esquerdo) <f (o.esquerdo), c = f (a.direito)> f (o.direito), g = f (a.top) <f (o.top), u = f (a.bottom)> f (o.bottom), b = 'left' === n && h || 'right' === n && c || 'top' === n && g || 'bottom' === n && u, y = -1! == ['top', 'bottom']. indexOf (n), w = !! t.flipVariations && (y && 'start' === r && h || y && 'end' === r && c ||! y && 'start' === r && g ||! y && 'end' === r && u); (m || b || w) && (e.flipped = ! 0, (m || b) && (n = p [d + 1]), w && (r = G (r)), e. Colocação = n + (r? '-' + r: ''), e .offsets.popper = le ({}, e.offsets.popper, C (e.instance.popper, e.offsets.reference, e.placement)), e = P (e.instance.modifiers, e, 'flip '))}), e}, comportamento:' inverter ', preenchimento: 5, boundariesElement:' viewport '}, interno: {pedido: 700, habilitado:! 1, fn: função (e) {var t = e. posicionamento, o = t.split ('-') [0], n = e.offsets, i = n.popper, r = n.reference, p = -1! == ['esquerda', 'direita'] .indexOf (o), s = -1 === ['top', 'left']. indexOf (o); return i [p? 'left': 'top'] = r [o] - (s? i [p? 'largura': 'altura']: 0), e.colocação = T (t), e.offsets.popper = g (i), e}}, ocultar: {ordem: 800, habilitado :! 0, fn:function (e) {if (! q (e.instance.modifiers, 'hide', 'preventOverflow')) return e; var t = e.offsets.reference, o = D (e.instance.modifiers, function (e ) {return'preventOverflow '=== e.name}). limites; if (t.bottom <o.top || t.left> o.right || t.top> o.bottom || t.right < o.esquerdo) {if (! 0 === e.ocultar) return e; e.ocultar =! 0, e.attributes ['x-fora-dos-limites'] = ''} else {if (! 1 === e.hide) return e; e.hide =! 1, e.attributes ['x-out-of-boundaries'] =! 1} return e}}, computeStyle: {order: 850, enabled :! 0, fn: function (e, t) {var o = tx, n = ty, i = e.offsets.popper, r = D (e.instance.modifiers, function (e) {return'applyStyle '=== e.name}). gpuAcceleration; void 0! == r && console.warn ('AVISO: opção `gpuAcceleration` movida para o modificador` computeStyle` e não será suportada em versões futuras de Popper.js!'); var s, d , a = void 0 === r? t.gpuAcceleration:r, l = p (e.instância.popper), f = u (l), m = {posição: i.posição}, h = {esquerda: Z (i.esquerda), topo: Q (i.top) , inferior: Q (i.bottom), direita: Z (i.right)}, c = 'bottom' === o? 'top': 'bottom', g = 'right' === n? 'left ':' right ', b = B (' transform '); if (d =' bottom '== c? -f.height + h.bottom: h.top, s =' right '== g? -f .width + h.right: h.left, a && b) m [b] = 'translate3d (' + s + 'px,' + d + 'px, 0)', m [c] = 0, m [g] = 0 , m.willChange = 'transformar'; senão {var y = 'fundo' == c? -1: 1, w = 'direita' == g? -1: 1; m [c] = d * y, m [g] = s * w, m.willChange = c + ',' + g} var E = {"x-placement": e.placement}; retornar e.attributes = le ({}, E, e.attributes) , e.styles = le ({}, m, e.styles), e.arrowStyles = le ({}, e.offsets.arrow, e.arrowStyles), e}, gpuAcceleration:! 0, x: 'inferior' , y: 'right'}, applyStyle: {order: 900, enabled:! 0, fn:function (e) {return j (e.instance.popper, e.styles), K (e.instance.popper, e.attributes), e.arrowElement && Object.keys (e.arrowStyles) .length && j (e.arrowElement, e .arrowStyles), e}, onLoad: função (e, t, o, n, i) {var r = L (i, t, e, o.positionFixed), p = O (o.placement, r, t, e, o.modifiers.flip.boundariesElement, o.modifiers.flip.padding); retornar t.setAttribute ('x-placement', p), j (t, {position: o.positionFixed? 'fixed': 'absoluto '}), o}, gpuAcceleration: void 0}}}, ce});positionFixed? 'fixed': 'absoluto'}), o}, gpuAcceleration: void 0}}}, ce});positionFixed? 'fixed': 'absoluto'}), o}, gpuAcceleration: void 0}}}, ce});
// # sourceMappingURL = popper.min.js.map